{"version":3,"sources":["Searchbar.js","Header.js","Result.js","ResultsList.js","Map.js","DetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","className","type","id","Header","to","Result","props","src","alt","index","result","restaurant_name","tag","name","ResultsList","searchResults","map","Map","centerLoc","lat","lng","MapContainer","style","height","width","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","DetailsPage","useParams","restaurantData","console","log","rating","price_range","city","phone","website","App","useState","image","setSearchResults","useEffect","a","jsonResponse","error","fetch","cache","mode","response","ok","json","message","getData","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cee7aa0b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Searchbar() {\n    return (\n        <div className=\"searchBar\">\n            <div>Find </div>\n            <input className=\"searchInput\" type=\"search\"></input>\n            <div>Near </div>\n            <input className=\"searchInput\" type=\"search\"></input>\n            <button id=\"searchButton\">Search</button>\n        </div>\n    )\n}","import React from \"react\"\nimport Searchbar from \"./Searchbar\"\nimport { NavLink } from \"react-router-dom\"\n\nexport default function Header() {\n    return (\n        <header>\n            <NavLink to=\"/yelp-clone\"><h1 id=\"siteTitle\">Yelp</h1></NavLink>\n            <Searchbar />\n        </header>\n    )\n}","import React from \"react\";\n\nexport default function Result(props) {\n    return (\n        <li className=\"resultCard\">\n            <img src=\"https://via.placeholder.com/200\" alt=\"\"></img>\n            <div>\n                <h4 className=\"resultCardName\">{`${props.index+1}. ${props.result.restaurant_name}`}</h4>\n                <p>{props.result.tag.name}</p>\n            </div>\n        </li>\n    )\n}","import React from \"react\";\nimport Result from \"./Result\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function ResultsList(props) {\n    return (\n        <div className=\"resultsList\">\n            <h3>Here's what we recommend:</h3>\n            <ol>\n                {props.searchResults.map((result, index) => {\n                    return (\n                        <NavLink key={result.restaurant_name + index} to={`/yelp-clone/${index}`}>\n                            <Result result={result} index={index} />\n                        </NavLink>\n                    )\n                })}\n            </ol>\n        </div>\n    )\n}","import { MapContainer, Marker, TileLayer } from \"react-leaflet\";\n\nexport default function Map (props) {\n    const centerLoc = [props.lat, props.lng];\n    return (\n        <MapContainer\n            style={{ height: \"50vh\", width: \"50vw\" }}\n            center={centerLoc}\n            zoom={13}\n            scrollWheelZoom={false}\n        >\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker\n                position={centerLoc}\n            ></Marker>\n        </MapContainer>\n    );\n};","import React from \"react\";\nimport { useParams, NavLink } from \"react-router-dom\";\nimport Map from \"./Map\"\n\nexport default function DetailsPage(props) {\n    const { id } = useParams();\n    const restaurantData = props.searchResults[id];\n    console.log(restaurantData)\n    return (\n        <div>\n            <NavLink to=\"/yelp-clone\"> - Go back </NavLink>\n            <img src=\"\" alt=\"\"></img>\n            <h3>Name: {restaurantData.restaurant_name}</h3>\n            <p>Restaurant type: {restaurantData.tag.name}</p>\n            <p>Restaurant rating: {restaurantData.rating}</p>\n            <p>Restaurant price range: {restaurantData.price_range}</p>\n            <p>Restaurant city: {restaurantData.city.name}</p>\n            <p>Restaurant phone: {restaurantData.phone}</p>\n            <p>Restaurant website: {restaurantData.website}</p>\n            <Map lat={restaurantData.lat} lng={restaurantData.lng}/>\n        </div>\n    )\n}","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route } from \"react-router-dom\"\nimport Header from \"./Header\"\nimport ResultsList from './ResultsList';\nimport DetailsPage from \"./DetailsPage\"\n\nfunction App() {\n  const initialData = [\n    {\n      restaurant_name: \"Vapiano\",\n      tag: {\n        id: 1,\n        name: \"Italian\"\n      },\n      city: {\n        id: 2,\n        name: \"Berlin\"\n      },\n      price_range: \"expensive\",\n      lat: 52.51295712182467,\n      lng: 13.391373237178277,\n      phone: \"1234567\",\n      image: \"https://blablabla.com\",\n      rating: \"5/10\",\n      website: \"https://vapiano.com\",\n    },\n    {\n      restaurant_name: \"Burgeramt\",\n      tag: {\n        id: 1,\n        name: \"Burger\"\n      },\n      city: {\n        id: 2,\n        name: \"Berlin\"\n      },\n      price_range: \"cheap\",\n      lat: 52.5145872638687,\n      lng: 13.46038104530701,\n      phone: \"1234567\",\n      image: \"https://blablabla.com\",\n      rating: \"8/10\",\n      website: \"https://burgeramt.com\",\n    },\n    {\n      restaurant_name: \"Sahara\",\n      tag: {\n        id: 1,\n        name: \"African\"\n      },\n      city: {\n        id: 2,\n        name: \"Berlin\"\n      },\n      price_range: \"cheap\",\n      lat: 52.48981395843291,\n      lng: 13.428881634837806,\n      phone: \"1234567\",\n      image: \"https://blablabla.com\",\n      rating: \"10/10\",\n      website: \"https://sahara.com\",\n    },\n    {\n      restaurant_name: \"Risa\",\n      tag: {\n        id: 1,\n        name: \"Chicken\"\n      },\n      city: {\n        id: 2,\n        name: \"Berlin\"\n      },\n      price_range: \"medium\",\n      lat: 52.54458123510735,\n      lng: 13.411456517998799,\n      phone: \"1234567\",\n      image: \"https://blablabla.com\",\n      rating: \"7/10\",\n      website: \"https://risachicken.com\",\n    }\n  ]\n  const [searchResults, setSearchResults] = useState(initialData)\n\n  useEffect(() => {\n    const getData = async () => {\n      let jsonResponse = { error: \"unknown\" };\n      let url = `http://mini-yelp-group2.herokuapp.com/restaurants`\n      try {\n        const response = await fetch(url, { cache: 'no-cache', mode: \"no-cors\" })\n        if (response.ok) {\n          jsonResponse = await response.json()\n          setSearchResults(jsonResponse)\n        }\n      } catch (error) {\n        console.log(error);\n        jsonResponse.error = error.message\n      }\n      return jsonResponse\n    }\n    getData()\n  }, [])\n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/yelp-clone\">\n          <ResultsList searchResults={searchResults} />\n        </Route>\n        <Route exact path=\"/yelp-clone/:id\">\n          <DetailsPage searchResults={searchResults} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}