{"version":3,"sources":["Searchbar.js","Header.js","Result.js","ResultsList.js","Map.js","DetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","props","className","htmlFor","onChange","e","getCuisines","target","value","name","id","defaultValue","getCities","Header","to","searchResults","Result","src","result","image","alt","index","restaurant_name","tag","ResultsList","map","Map","centerLoc","lat","lng","MapContainer","style","height","width","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","DetailsPage","useParams","restaurantData","console","log","rating","price_range","city","phone","website","lnt","App","useState","setSearchResults","visibleResults","setVisibleResults","useEffect","a","jsonResponse","error","fetch","response","ok","json","message","getData","cuisine","cuisineResults","filter","restaurant","cityname","cityResults","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.145782b3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Searchbar(props) {\n    return (\n        <div className=\"searchBar\">\n            <form>\n                <label htmlFor=\"cuisine-select\">Find</label>\n                <select \n                    onChange={(e)=>{props.getCuisines(e.target.value)}}\n                    name=\"cuisine\" id=\"cuisine-select\">\n                    <option value=\"\" defaultValue>Cuisine type</option>\n                    <option value=\"American\">American</option>\n                    <option value=\"Italian\">Italian</option>\n                    <option value=\"Mexican\">Mexican</option>\n                    <option value=\"Vegan\">Vegan</option>\n                    <option value=\"German\">German</option>\n                    <option value=\"French\">French</option>\n                </select>\n                <label htmlFor=\"city-select\">Near</label>\n                <select \n                    onChange={(e)=>{props.getCities(e.target.value)}}\n                    name=\"city\" id=\"city-select\">\n                    <option value=\"\" defaultValue>City</option>\n                    <option value=\"Frankfurt\">Frankfurt</option>\n                    <option value=\"Berlin\">Berlin</option>\n                    <option value=\"Münich\">Münich</option>\n                    <option value=\"Bonn\">Bonn</option>\n                    <option value=\"Köln\">Köln</option>\n                    <option value=\"Stuttgart\">Stuttgart</option>\n                    <option value=\"Jenna\">Jenna</option>\n                    <option value=\"Los Angeles\">Los Angeles</option>\n                </select>\n            </form>\n        </div>\n    )\n}","import React from \"react\"\nimport Searchbar from \"./Searchbar\"\nimport { NavLink } from \"react-router-dom\"\n\nexport default function Header(props) {\n    return (\n        <header>\n            <NavLink to=\"/yelp-clone\"><h1 id=\"siteTitle\">Yelp</h1></NavLink>\n            <Searchbar getCuisines={props.getCuisines} getCities={props.getCities} searchResults={props.searchResults} />\n        </header>\n    )\n}","import React from \"react\";\n\nexport default function Result(props) {\n    return (\n        <li className=\"resultCard\">\n            <img src={props.result.image} alt=\"\"></img>\n            <div className=\"resultCardText\">\n                <h4 className=\"resultCardName\">{`${props.index+1}. ${props.result.restaurant_name}`}</h4>\n                <p>{props.result.tag?.name}</p>\n            </div>\n        </li>\n    )\n}","import React from \"react\";\nimport Result from \"./Result\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function ResultsList(props) {\n    return (\n        <div className=\"resultsList\">\n            <h3>Here's what we recommend:</h3>\n            <ol>\n                {props.searchResults.map((result, index) => {\n                    return (\n                        <NavLink key={result.restaurant_name + index} to={`/yelp-clone/${index}`}>\n                            <Result result={result} index={index} />\n                        </NavLink>\n                    )\n                })}\n            </ol>\n        </div>\n    )\n}","import { MapContainer, Marker, TileLayer } from \"react-leaflet\";\n\nexport default function Map (props) {\n    const centerLoc = [props.lat, props.lng];\n    return (\n        <MapContainer\n            style={{ height: \"50vh\", width: \"100%\" }}\n            center={centerLoc}\n            zoom={13}\n            scrollWheelZoom={false}\n        >\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker\n                position={centerLoc}\n            ></Marker>\n        </MapContainer>\n    );\n};","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Map from \"./Map\"\n\nexport default function DetailsPage(props) {\n    const { id } = useParams();\n    const restaurantData = props.searchResults[id];\n    console.log(restaurantData)\n    return (\n        <div className=\"detailsContainer\">\n            <h2>{restaurantData.restaurant_name}</h2>\n            <div className=\"detailsInfo\">\n                <img src={restaurantData.image} alt=\"\"></img>\n                <div className=\"restaurantInfo\">\n                    <p>Restaurant type: {restaurantData.tag?.name}</p>\n                    <p>Restaurant rating: {restaurantData.rating}</p>\n                    <p>Restaurant price range: {restaurantData.price_range}</p>\n                    <p>Restaurant city: {restaurantData.city?.name}</p>\n                    <p>Restaurant phone: {restaurantData.phone}</p>\n                    <p>Restaurant website: {restaurantData.website}</p>\n                </div>\n            </div>\n            <div className=\"restaurantMap\"><Map lat={restaurantData.lat} lng={restaurantData.lnt} /></div>\n        </div>\n    )\n}","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route } from \"react-router-dom\"\nimport Header from \"./Header\"\nimport ResultsList from './ResultsList';\nimport DetailsPage from \"./DetailsPage\"\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([])\n\n  const [visibleResults, setVisibleResults] = useState([])\n\n  useEffect(() => {\n    const getData = async () => {\n      let jsonResponse = { error: \"unknown\" };\n      let url = `https://mini-yelp-group2.herokuapp.com/restaurants`\n      try {\n        const response = await fetch(url)\n        if (response.ok) {\n          jsonResponse = await response.json()\n          console.log(jsonResponse)\n          setSearchResults(jsonResponse)\n          setVisibleResults(jsonResponse)\n        }\n      } catch (error) {\n        console.log(error);\n        jsonResponse.error = error.message\n      }\n    }\n    getData()\n  }, [])\n\n  const getCuisines = (cuisine) => {\n    let cuisineResults = searchResults.filter( restaurant => restaurant.tag.name === cuisine )\n    setVisibleResults(cuisineResults)\n  }\n\n  const getCities = (cityname) => {\n    let cityResults = searchResults.filter( restaurant => restaurant.city.name === cityname )\n    setVisibleResults(cityResults)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header getCuisines={getCuisines} getCities={getCities} searchResults={searchResults}/>\n      <Switch>\n        <Route exact path=\"/yelp-clone\">\n          <ResultsList searchResults={visibleResults} />\n        </Route>\n        <Route exact path=\"/yelp-clone/:id\">\n          <DetailsPage searchResults={searchResults} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}